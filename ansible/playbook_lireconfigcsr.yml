---
- name: Acte 1 - essai C1111
  # On va agir sur l'hôte csr1000 dans cet acte
  hosts: c1111
  # Passe l'étape permettant de récupérer des informations sur
  #   l'hôte pour gagner du temps
  gather_facts: false

  # Liste des tâches associées à notre Acte
  tasks:
    - name: Récupère la configuration
      # On indique le nom du module
      cisco.ios.ios_command:
        # On indique ensuite ces paramètres
        # Liste dans https://docs.ansible.com/ansible/latest/collections/cisco/ios/ios_command_module.html
        commands:
          - show running-config
      # Register permet de récupérer le résultat de la commande
      # et de le mettre dans la variable config
      register: config

    - name: Enregistre la configuration
      # Module pour copier des fichiers
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
      copy:
        # Source : ce que l'on a récupéré dans config
        content: " {{ config.stdout[0] }}"
        # Nom du fichier, le terme entre accolade est une variable
        dest: "show_run_{{ inventory_hostname }}.txt"

- name: Connection enable
  hosts: c1111
  gather_facts: false
  vars:
    ansible_become: yes
    ansible_become_method: enable
    ansible_become_password: cisco123!

  tasks:
    - name: Connexion au mode enable
      ios_command:
        commands:
          - enable
          - cisco123!
      register: output_post_auth

- name: Config int réseau
  hosts: c1111
  # Passe l'étape permettant de récupérer des informations sur
  #   l'hôte pour gagner du temps
  gather_facts: false
  vars:
    interface_gigabit_1: "gi0/1/0"
    interface_gigabit_2: "gi0/1/1"
    interface_gigabit_3: "gi0/1/2"
    interface_gigabit_4: "gi0/1/3"
    vlan_1: "vlan 10"
    vlan_2: "vlan 20"
    vlan_3: "vlan 40"
    

  # Liste des tâches associées à notre Acte
  tasks:
    - name: Configuration de l'interface {{ interface_gigabit_1 }} en DHCP
      # On indique le nom du module
      cisco.ios.ios_config:
        lines:
          - interface gi0/1/0
          - description "Reseau IUT"
          #- ip address dhcp
          - no shutdown
        parents: interface {{ interface_gigabit_1 }}
      register: interface_gigabit_1_result

    - name: Configuration de l'interface {{ interface_gigabit_2 }} en DHCP
      # On indique le nom du module
      cisco.ios.ios_config:
        lines:
          - interface {{ vlan_1 }}
          - ip address 192.168.2.1 255.255.255.0
          - interface {{ interface_gigabit_2 }}
          - description "LAN_ENTREPRISE"
          - switchport mode access
          - switchport access {{ vlan_1 }}
          - no shutdown
        parents: interface {{ interface_gigabit_2 }}
      register: interface_gigabit_2_result
    
    - name: Configuration de l'interface {{ interface_gigabit_3 }} en DHCP
      # On indique le nom du module
      cisco.ios.ios_config:
        lines:
          - interface {{ vlan_2 }}
          - ip address 192.168.3.1 255.255.255.0
          - interface {{ interface_gigabit_3 }}
          - description "LAN_DMZ"
          - switchport mode access
          - switchport access {{ vlan_2 }}
          - no shutdown
        parents: interface {{ interface_gigabit_3 }}
      register: interface_gigabit_3_result

    - name: Configuration de l'interface {{ interface_gigabit_4 }} en DHCP
      # On indique le nom du module
      cisco.ios.ios_config:
        lines:
          - interface {{ vlan_3 }}
          - ip address 192.168.4.1 255.255.255.0
          - interface {{ interface_gigabit_4 }}
          - description "LAN_ADMIN"
          - switchport mode access
          - switchport access {{ vlan_3 }}
          - no shutdown
        parents: interface {{ interface_gigabit_4 }}
      register: interface_gigabit_4_result

    - name: Affichage des résultats de la configuration
      debug:
        var: item
      loop:
        - "{{ interface_gigabit_1_result }}"
        - "{{ interface_gigabit_2_result }}"
        - "{{ interface_gigabit_3_result }}"
        - "{{ interface_gigabit_4_result }}"


#- name: Serveur DHCP
#  hosts: c1111
#  gather_facts: false
#  vars:
#    network_1: "192.168.2.0 255.255.255.0"
#    network_2: "192.168.3.0 255.255.255.0"
#    network_3: "192.168.4.0 255.255.255.0"
#    gateway_1: "192.168.2.1"
#    gateway_2: "192.168.3.1"
#    gateway_3: "192.168.4.1"



#    - name: Enregistre la configuration
      # Module pour copier des fichiers
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
 #     copy:
        # Source : ce que l'on a récupéré dans config
  #      content: " {{ config.stdout[0] }}"
        # Nom du fichier, le terme entre accolade est une variable
   #     dest: "show_run_{{ inventory_hostname }}.txt"
